syntax = "proto3";

package api.review.v1;
// 导入google api注解相关proto文件
import "google/api/annotations.proto";  // 添加这行
import "validate/validate.proto";

option go_package = "review-service/api/review/v1;v1";
option java_multiple_files = true;
option java_package = "api.review.v1";

// 定义API文件，按照需要修改编写proto文件

// 定义评价服务
service Review {
	// 创建服务
	rpc CreateReview (CreateReviewRequest) returns (CreateReviewReply){
		option (google.api.http) = {
			post: "/v1/review",
			body: "*"
		};
	};
	rpc UpdateReview (UpdateReviewRequest) returns (UpdateReviewReply){
		option (google.api.http) = {
			put: "/v1/review/{reviewID}",
			body: "*"
		};
	};
	rpc DeleteReview (DeleteReviewRequest) returns (DeleteReviewReply){
		option (google.api.http) = {
			delete: "/v1/review/{reviewID}"
		};
	};
	rpc GetReview (GetReviewRequest) returns (GetReviewReply){
		option (google.api.http) = {
			get: "/v1/review/{reviewID}"
		};
	};
	rpc ListReview (ListReviewRequest) returns (ListReviewReply){
		option (google.api.http) = {
			get: "/v1/reviews"
		};
	};
	
	// 保存评价回复
	rpc SaveReply (SaveReplyRequest) returns (SaveReplyReply){
		option (google.api.http) = {
			post: "/v1/review/{reviewID}/reply",
			body: "*"
		};
	};
	
	// 审核评价
	rpc AuditReview (AuditReviewRequest) returns (AuditReviewReply){
		option (google.api.http) = {
			put: "/v1/review/{reviewID}/audit",
			body: "*"
		};
	};
	
	// 申诉评价
	rpc AppealReview (AppealReviewRequest) returns (AppealReviewReply){
		option (google.api.http) = {
			post: "/v1/review/{reviewID}/appeal",
			body: "*"
		};
	};
	
	// 审核申诉
	rpc AuditAppeal (AuditAppealRequest) returns (AuditAppealReply){
		option (google.api.http) = {
			put: "/v1/appeal/{appealID}/audit",
			body: "*"
		};
	};
}

// 保存回复请求
message SaveReplyRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 userID = 2 [(validate.rules).int64 = {gt: 0}];
	int64 storeID = 3 [(validate.rules).int64 = {gt: 0}];
	string content = 4 [(validate.rules).string = {min_len: 1, max_len: 500}];
	string picInfo = 5;
	string videoInfo = 6;
}

message SaveReplyReply {
	int64 replyID = 1;
	bool success = 2;
}

// 审核评价请求
message AuditReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	string opUser = 2 [(validate.rules).string = {min_len: 1}];
	string opReason = 3;
	string opRemarks = 4;
	int32 status = 5 [(validate.rules).int32 = {in: [10,20,30,40]}]; // 10待审核; 20审核通过; 30审核不通过; 40隐藏
}

message AuditReviewReply {
	bool success = 1;
}

// 申诉评价请求
message AppealReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 storeID = 2 [(validate.rules).int64 = {gt: 0}];
	string reason = 3 [(validate.rules).string = {min_len: 1}];
	string content = 4 [(validate.rules).string = {min_len: 1, max_len: 500}];
	string picInfo = 5;
	string videoInfo = 6;
	string opUser = 7 [(validate.rules).string = {min_len: 1}];
}

message AppealReviewReply {
	int64 appealID = 1;
	bool success = 2;
}

// 审核申诉请求
message AuditAppealRequest {
	int64 appealID = 1 [(validate.rules).int64 = {gt: 0}];
	int32 status = 2 [(validate.rules).int32 = {in: [10,20,30]}]; // 10待审核; 20申诉通过; 30申诉驳回
	string auditReason = 3;
	string auditRemarks = 4;
	string auditUser = 5 [(validate.rules).string = {min_len: 1}];
}

message AuditAppealReply {
	bool success = 1;
}

// 创建评价的参数
message CreateReviewRequest {
	int64 userID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 orderID = 2 [(validate.rules).int64 = {gt: 0}];
	int32 score = 3 [(validate.rules).int32 = {gt: 0, lte: 5}];
	int32 serviceScore = 4 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	int32 expressScore = 5 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	string content = 6 [(validate.rules).string = {min_len: 8, max_len: 255}];
	string picInfo = 7;
	string videoInfo = 8;
	bool annoymous = 9;
}
// 评价的回复
message CreateReviewReply {
	int64 reviewID = 1;
}

message UpdateReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int32 score = 2 [(validate.rules).int32 = {gt: 0, lte: 5}];
	int32 serviceScore = 3 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	int32 expressScore = 4 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	string content = 5 [(validate.rules).string = {min_len: 8, max_len: 255}];
	string picInfo = 6;
	string videoInfo = 7;
}
message UpdateReviewReply {
	bool success = 1;
}

message DeleteReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 userID = 2 [(validate.rules).int64 = {gt: 0}];
}
message DeleteReviewReply {
	bool success = 1;
}

message GetReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
}
message GetReviewReply {
	int64 reviewID = 1;
	int64 userID = 2;
	int64 orderID = 3;
	int32 score = 4;
	int32 serviceScore = 5;
	int32 expressScore = 6;
	string content = 7;
	string picInfo = 8;
	string videoInfo = 9;
	bool anonymous = 10;
	int32 status = 11;
	string createAt = 12;
}

// 列表查询请求
message ListReviewRequest {
	int64 userID = 1 [(validate.rules).int64 = {gt: 0}];
	int32 offset = 2 [(validate.rules).int32 = {gte: 0}];
	int32 limit = 3 [(validate.rules).int32 = {gt: 0, lte: 100}];
}

message ListReviewReply {
	repeated GetReviewReply reviews = 1;
	int64 total = 2;
}